requirejs.config({
    baseUrl: '/dependencies/can-minified'
});

var fiso;

requirejs(["/dependencies/can-minified/FipCanConfig.js", "Can"], 
    function(CONFIG, Can) {
	
        can = new Can(CONFIG, CONFIG.api_key, CONFIG.api_key_secret);

        // Create FSIO client.
   	    fsio = can.createFsioClient();
        
    }
);

function uploadFile(ticket, token, path, taskFile, eventID, chkptID) {
    var object_name = path + "/" + taskFile.name;
    fsio.data.partialUploadInit(token, object_name, function(jqXHR,textStatus) {
        var uploadId = jqXHR.getResponseHeader("upload-id");
            
        // Setup ajax calls when uploading data
        var defaultContentType = $.ajaxSettings.contentType;
        var defaultProcessData = $.ajaxSettings.processData;
        $.ajaxSetup({
            contentType : false,
            processData : false
        });
        Blob.prototype.substring = Blob.prototype.slice;
        taskFile.length = taskFile.size;
        fsio.data.uploadPartially(token, uploadId, taskFile, taskFile.length, function(jqXHR) {
            // alert("Uploaded " + fileName + " with status " + jqXHR.status + " and response text " + jqXHR.responseText);
            $.ajaxSetup({
                contentType : defaultContentType,
                processData : defaultProcessData
            });

            if(jqXHR.status != 204) {
                console.log("Task upload error");
            }
            else {
                    $.get("/api/v2/events/"+eventID+"/checkpoints/"+chkptID, function(data){
                        var taskObj = data.task;  
                        fsio.content.getFileInfo(ticket, object_name, function(jqXHR) {
                            var response = JSON.parse(jqXHR.responseText)
                            taskObj["URL"] = response.Items[0].URL
                            $.ajax({
                            url:'/api/v2/events/'+eventID+'/checkpoints/'+chkptID,   
                            type:'PUT',
                            data: taskObj,
                                success: function(response,data){
                                    console.log("upload_progress in CAN");
                                    console.log(upload_progress);
                                    console.log("Task Object");
                                    console.log(taskObj);
                                    upload_progress[taskFile.name] = true;
                                }
                            });
                        });
                        
                        });
                        
                   }   
            });
        });
    }
